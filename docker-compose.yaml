version: "3"
services:
  
  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
  
  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
      
  jaeger-collector:
    image: jaegertracing/jaeger-opentelemetry-collector
    ports:
      - "14255:14250"
    environment:
      - ES_SERVER_URLS=http://elasticsearch:9200
      - SPAN_STORAGE_TYPE=elasticsearch
    configs:
      - jaeger_config
      
  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
  
  ## prometheus
  prometheus:
    container_name: prometheus-v1
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  
  ## go app client
  demo-client:
    build:
      dockerfile: Dockerfile
      context: ./ln-go/client
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
    depends_on:
      - demo-server
  
  ## go app server
  demo-server:
    build:
      dockerfile: Dockerfile
      context: ./ln-go/server
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    ports:
      - "7080"
    depends_on:
      - otel-collector
  
  ## django app server
  django-server-demo:
    build:
      dockerfile: Dockerfile
      context: ./django/server
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    ports:
      - "8002:8000"
    depends_on:
      - otel-collector
  
  ## django app client
  django-client-demo:
    build:
      dockerfile: Dockerfile
      context: ./django/client
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - PYTHON_DEMO_SERVER_ENDPOINT=http://django-server-demo:8000
    ports:
      - "8005:8000"
    depends_on:
      - django-server-demo

